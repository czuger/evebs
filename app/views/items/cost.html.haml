.container

  %h3
    Production cost estimation for
    = link_to( @item.name, "http://games.chruker.dk/eve_online/item.php?type_id=#{@item.cpp_eve_item_id}", :target => '_blank' )
    = print_total_cost_for_items( @item )

  - total_for_batch = 0
  %table.table
    %tr
      %th Item
      %th.text-right Average sold price over the last 7 days in Jita
      %th.text-right Required quantity
      %th.text-right Total cost
    - @item.blueprint_materials.includes( :blueprint_component ).each do |material|
      - component = material.blueprint_component
      - if component
        %tr{ class: cycle( :odd, :even ) }
          %td= link_to( component.name, component_path( component.id ) )
          %td.text-right= print_isk( component.cost )
          %td.text-right= print_volume( material.required_qtt )
          - total = component.cost * material.required_qtt
          - total_for_batch += total
          %td.text-right= print_isk( total )
    %tr{ class: cycle( :odd, :even ) }
      %td{ colspan: 3 }
        Total for batch
      %td.text-right= print_isk( total_for_batch )
    - total_for_one_item = total_for_batch / @item.blueprint.prod_qtt
    %tr{ class: cycle( :odd, :even ) }
      %td{ colspan: 3 }
        Batch size
      %td.text-right= print_volume( @item.blueprint.prod_qtt )
    %tr{ class: cycle( :odd, :even ) }
      %td{ colspan: 3 }
        Total for one item
      %td.text-right= print_isk( total_for_one_item )
    %tr{ class: cycle( :odd, :even ) }
      %td{ colspan: 3 }
        Industry taxes
      %td.text-right= print_pcent( Blueprint::TAX_AMOUNT )
    %tr{ class: cycle( :odd, :even ) }
      %td{ colspan: 3 }
        Final cost
      %td.text-right= print_isk( total_for_one_item * ( 1+Blueprint::TAX_AMOUNT ) )



