.container
  %h3
    Informations for
    = link_to( @item.name, "http://games.chruker.dk/eve_online/item.php?type_id=#{@item.cpp_eve_item_id}", :target => '_blank' )
    (
    = link_to( 'Eve central quicklook', "https://eve-central.com/home/quicklook.html?typeid=#{@item.cpp_eve_item_id}", :target => '_blank' )
    )

  -#%h4
  -#  = "Item cost: #{print_isk(@item_cost)}"
  -#  (
  -#  = link_to( 'Detail', item_cost_path( @item ) )
  -#  )

  %table.table.table-bordered.sortable
    %thead
      %tr
        %th Trade hub
        %th.text-left Current margin
        %th.text-left Current min price
        %th.text-left Avg margin
        %th.text-left Avg price
        %th.text-left Monthly regional volume

    %tbody
      - @item_prices.each_with_index do | ip, row_index|

        %tr

          %td= trade_hub_name_with_region( ip.trade_hub )

          %td.text-right{'data-value' => ( ip.min_price / ip.single_unit_cost - 1 if ip.min_price )}= print_pcent( ip.min_price / ip.single_unit_cost - 1 ) if ip.min_price
          %td.text-right{'data-value' => ( ip.min_price if ip.min_price )}= print_isk( ip.min_price ) if ip.min_price

          %td.vcenter.text-right{'data-value' => ( ip.avg_price / ip.single_unit_cost - 1 if ip.avg_price )}= print_pcent( ip.avg_price / ip.single_unit_cost - 1 ) if ip.avg_price
          %td.vcenter.text-right{'data-value' => ( ip.avg_price if ip.avg_price )}= print_isk( ip.avg_price ) if ip.avg_price
          %td.vcenter.text-right{'data-value' => ( ip.vol_month if ip.vol_month )}= print_volume( ip.vol_month ) if ip.vol_month

          -# TODO : sort don't work on changes, fix the gem and propose an update.

    -# TODO : remove dead code

    -#      %td.text-right{ class: cell_classes( region_printed, :middle_middle, :right, row_class, last_row ) }= print_isk( ip.min_price )
    -#      - unless region_printed
    -#        %td.vcenter.text-right{ rowspan: trade_hubs.count }= print_pcent( ip.avg_price / ip.single_unit_cost - 1 ) if ip.avg_price
    -#        %td.vcenter.text-right{ rowspan: trade_hubs.count }= print_isk( ip.avg_price )
    -#        %td.vcenter.text-right{ rowspan: trade_hubs.count }= print_volume( ip.vol_month )
    -#        - region_printed = true


        -#- if ip.region
        -#
        -#  - last_row = row_index == @item_prices.count - 1
        -#  - region_array_data = ip.region.name
        -#  - trade_hubs = ip.region.trade_hubs
        -#  - region_printed = false
        -#
        -#  - trade_hubs.each do |trade_hub|
        -#    - row_class = cycle( :odd, :even )
        -#    %tr
        -#      %td{ class: cell_classes( region_printed, :left, nil, row_class, last_row ) }= trade_hub.name
        -#
        -#      %td.text-right{ class: cell_classes( region_printed, :middle, :right, row_class, last_row ) }= print_pcent( ip.min_price / ip.single_unit_cost - 1 ) if ip.min_price
        -#      %td.text-right{ class: cell_classes( region_printed, :middle_middle, :right, row_class, last_row ) }= print_isk( ip.min_price )
        -#      - unless region_printed
        -#        %td.vcenter.text-right{ rowspan: trade_hubs.count }= print_pcent( ip.avg_price / ip.single_unit_cost - 1 ) if ip.avg_price
        -#        %td.vcenter.text-right{ rowspan: trade_hubs.count }= print_isk( ip.avg_price )
        -#        %td.vcenter.text-right{ rowspan: trade_hubs.count }= print_volume( ip.vol_month )
        -#        - region_printed = true