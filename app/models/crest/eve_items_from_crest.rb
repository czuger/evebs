require 'open-uri'
require 'open-uri/cached'
require 'pp'

# Items list from CREST is not really reliable.
# Use ItemsInit::ItemsList.initialize_eve_items rather
# That was because i was only reading the first page

class Crest::EveItemsFromCrest
  include Crest::CrestBase

  BLUEPRINTS_GROUPS = [ 1008,1016,1019,1028,1029,1030,1046,1105,1191,1198,1202,1203,1204,1240,1241,1242,1243,1244,1245,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1286,1313,1339,1340,1341,1342,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1354,1355,1356,1358,1359,1389,1521,1525,1526,1527,1528,1529,1531,1532,1533,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1547,1548,1549,1550,1551,1552,1553,1554,1555,1556,1557,1558,1559,1560,1561,1562,1563,1564,1565,1567,1568,1570,1571,1572,1574,1575,1576,1577,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1592,1593,1594,1595,1601,1602,1603,1617,1643,1664,1697,1701,1707,1712,1716,1719,1720,1721,1723,1724,1725,1726,1727,1728,1729,1797,1798,1799,1800,1801,1802,1803,1804,1805,1806,1807,1808,1809,1828,1829,1830,1834,1842,1843,1912,1913,1918,1919,1920,1938,1939,1940,1945,1949,2014,2016,2017,2020,261,264,272,273,274,275,276,277,278,279,280,281,282,283,284,285,289,290,291,292,293,295,296,297,298,302,303,305,306,307,308,309,312,313,315,316,318,320,325,331,332,335,338,339,340,341,343,353664,354425,355463,355464,355466,355467,355468,358,359,390,407,410,411,412,413,415,416,417,418,425,427,428,429,430,443,444,445,446,454,455,456,457,459,461,462,463,497,583,584,585,586,589,590,591,592,597,598,599,617,635,636,637,638,753,783,784,785,786,788,789,790,791,792,793,794,796,799,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,913,937,939,975 ]
  SKINS_GROUPS = [ 1956,1957,1958,1959,1963,1964,1965,1966,1967,1969,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1990,1991,1992,1993,1994,1995,1996,1997,2000,2002,2003,2004,2005,2007,2008,2009,2010,2012,2024,2025,2026,2027,2030,2031,2038,2039,2040,2041,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2088,2089,2090,2091,2092,2093,2095,2096,2097,2098,2103,2104,2105,2106,2107,2108,2110,2111,2112,2113,369215,369221,369223,369225,369227 ]
  RUBISH_GROUPS = [ 20, 22, 23, 491, 492, 733, 738, 751, 752, 754, 1109, 1110, 1333, 1334, 1335, 1336, 1337 ]
  IMPLANTS_GROUPS = [ 1506,618,619,620,621,622 ]
  SKILLS_GROUPS = [ 364, 369, 370, 372, 373, 374, 375, 365, 366, 376, 377, 378, 1323 ]
  INSIGNIAS_GROUPS = [ 730,731,732,734,735,736,737,1700,1846,740,741,742,743,744,745,746,747,748,749,750 ]
  VESTEMENTS_GROUPS = [ 1398,1399,1400,1401,1662,1836,1943,1403,1404,1405,1406,1662,1836,1943,1944 ]

  def initialize

    ActiveRecord::Base.transaction do

      items = get_multipage_data( 'market/types', true )

      puts items.first

      unwanted_groups = BLUEPRINTS_GROUPS + SKINS_GROUPS + RUBISH_GROUPS + IMPLANTS_GROUPS + SKILLS_GROUPS + INSIGNIAS_GROUPS + VESTEMENTS_GROUPS

      File.open( 'tmp/items.txt', 'w' ) do |file|
        items_array = items.map{ |e| [ e['marketGroup']['id'], e['type']['name'] ] }
        items_array.reject!{ |e| unwanted_groups.include?( e[0] ) }
        items_array.sort!
        items_array.each do |item|
          file.puts "#{item[0]} -> #{item[1]}"
        end
      end

      exit

      # puts html_req
      json_result = open( html_req ).read

      parsed_data = JSON.parse( json_result )

      parsed_data["items"].each do |item|
        market_group_id = item['marketGroup']['id']
        type_id = item['type']['id']
        name = item['type']['name']
        lcase_name = name.downcase
        eve_item = EveItem.find_by_cpp_eve_item_id( type_id )
        if eve_item
          eve_item.update_attribute( :cpp_market_group_id, market_group_id )
        else
          EveItem.create!( cpp_eve_item_id: type_id, name: name, name_lowcase: lcase_name, cpp_market_group_id: market_group_id )
        end
      end
    end
  end
end